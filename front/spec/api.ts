/* tslint:disable */
/* eslint-disable */
/**
 * auto generated spec
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { Configuration } from './configuration';
import globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from './common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from './base';

/**
 * 
 * @export
 * @interface ApiJobJobPUTRequest
 */
export interface ApiJobJobPUTRequest {
    /**
     * 
     * @type {string}
     * @memberof ApiJobJobPUTRequest
     */
    'name': string;
    /**
     * 
     * @type {number}
     * @memberof ApiJobJobPUTRequest
     */
    'user_id': number;
}
/**
 * 
 * @export
 * @interface ApiJobJobPUTResponse200
 */
export interface ApiJobJobPUTResponse200 {
    /**
     * 
     * @type {number}
     * @memberof ApiJobJobPUTResponse200
     */
    'id': number;
    /**
     * 
     * @type {string}
     * @memberof ApiJobJobPUTResponse200
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof ApiJobJobPUTResponse200
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof ApiJobJobPUTResponse200
     */
    'updated_at': string;
    /**
     * 
     * @type {number}
     * @memberof ApiJobJobPUTResponse200
     */
    'user_id': number;
}
/**
 * 
 * @export
 * @interface ApiJobJobPUTResponse403
 */
export interface ApiJobJobPUTResponse403 {
    /**
     * 
     * @type {string}
     * @memberof ApiJobJobPUTResponse403
     */
    'message': string;
    /**
     * 
     * @type {string}
     * @memberof ApiJobJobPUTResponse403
     */
    'exception': string;
    /**
     * 
     * @type {string}
     * @memberof ApiJobJobPUTResponse403
     */
    'file': string;
    /**
     * 
     * @type {number}
     * @memberof ApiJobJobPUTResponse403
     */
    'line': number;
    /**
     * 
     * @type {Array<ApiJobJobPUTResponse403Trace>}
     * @memberof ApiJobJobPUTResponse403
     */
    'trace': Array<ApiJobJobPUTResponse403Trace>;
}
/**
 * 
 * @export
 * @interface ApiJobJobPUTResponse403Trace
 */
export interface ApiJobJobPUTResponse403Trace {
    /**
     * 
     * @type {string}
     * @memberof ApiJobJobPUTResponse403Trace
     */
    'file': string;
    /**
     * 
     * @type {number}
     * @memberof ApiJobJobPUTResponse403Trace
     */
    'line': number;
    /**
     * 
     * @type {string}
     * @memberof ApiJobJobPUTResponse403Trace
     */
    'function': string;
    /**
     * 
     * @type {string}
     * @memberof ApiJobJobPUTResponse403Trace
     */
    'class': string;
    /**
     * 
     * @type {string}
     * @memberof ApiJobJobPUTResponse403Trace
     */
    'type': string;
}
/**
 * 
 * @export
 * @interface ApiJobJobPUTResponse422
 */
export interface ApiJobJobPUTResponse422 {
    /**
     * 
     * @type {string}
     * @memberof ApiJobJobPUTResponse422
     */
    'message': string;
    /**
     * 
     * @type {ApiJobJobPUTResponse422Errors}
     * @memberof ApiJobJobPUTResponse422
     */
    'errors': ApiJobJobPUTResponse422Errors;
}
/**
 * 
 * @export
 * @interface ApiJobJobPUTResponse422Errors
 */
export interface ApiJobJobPUTResponse422Errors {
    /**
     * 
     * @type {Array<string>}
     * @memberof ApiJobJobPUTResponse422Errors
     */
    'name': Array<string>;
}
/**
 * 
 * @export
 * @interface ApiMasterGETResponse200
 */
export interface ApiMasterGETResponse200 {
    /**
     * 
     * @type {ApiMasterGETResponse200Aa}
     * @memberof ApiMasterGETResponse200
     */
    'aa': ApiMasterGETResponse200Aa;
    /**
     * 
     * @type {ApiMasterGETResponse200Bb}
     * @memberof ApiMasterGETResponse200
     */
    'bb': ApiMasterGETResponse200Bb;
    /**
     * 
     * @type {ApiMasterGETResponse200This}
     * @memberof ApiMasterGETResponse200
     */
    'this': ApiMasterGETResponse200This;
}
/**
 * 
 * @export
 * @interface ApiMasterGETResponse200Aa
 */
export interface ApiMasterGETResponse200Aa {
    /**
     * 
     * @type {string}
     * @memberof ApiMasterGETResponse200Aa
     */
    'hoge': string;
    /**
     * 
     * @type {string}
     * @memberof ApiMasterGETResponse200Aa
     */
    'fuga': string;
}
/**
 * 
 * @export
 * @interface ApiMasterGETResponse200Bb
 */
export interface ApiMasterGETResponse200Bb {
    /**
     * 
     * @type {string}
     * @memberof ApiMasterGETResponse200Bb
     */
    'cat': string;
    /**
     * 
     * @type {string}
     * @memberof ApiMasterGETResponse200Bb
     */
    'dog': string;
}
/**
 * 
 * @export
 * @interface ApiMasterGETResponse200This
 */
export interface ApiMasterGETResponse200This {
    /**
     * 
     * @type {ApiMasterGETResponse200ThisIs}
     * @memberof ApiMasterGETResponse200This
     */
    'is': ApiMasterGETResponse200ThisIs;
}
/**
 * 
 * @export
 * @interface ApiMasterGETResponse200ThisIs
 */
export interface ApiMasterGETResponse200ThisIs {
    /**
     * 
     * @type {ApiMasterGETResponse200ThisIsSuper}
     * @memberof ApiMasterGETResponse200ThisIs
     */
    'super': ApiMasterGETResponse200ThisIsSuper;
}
/**
 * 
 * @export
 * @interface ApiMasterGETResponse200ThisIsSuper
 */
export interface ApiMasterGETResponse200ThisIsSuper {
    /**
     * 
     * @type {ApiMasterGETResponse200ThisIsSuperNested}
     * @memberof ApiMasterGETResponse200ThisIsSuper
     */
    'nested': ApiMasterGETResponse200ThisIsSuperNested;
}
/**
 * 
 * @export
 * @interface ApiMasterGETResponse200ThisIsSuperNested
 */
export interface ApiMasterGETResponse200ThisIsSuperNested {
    /**
     * 
     * @type {ApiMasterGETResponse200ThisIsSuperNestedMaster}
     * @memberof ApiMasterGETResponse200ThisIsSuperNested
     */
    'master': ApiMasterGETResponse200ThisIsSuperNestedMaster;
}
/**
 * 
 * @export
 * @interface ApiMasterGETResponse200ThisIsSuperNestedMaster
 */
export interface ApiMasterGETResponse200ThisIsSuperNestedMaster {
    /**
     * 
     * @type {ApiMasterGETResponse200ThisIsSuperNestedMasterData}
     * @memberof ApiMasterGETResponse200ThisIsSuperNestedMaster
     */
    'data': ApiMasterGETResponse200ThisIsSuperNestedMasterData;
}
/**
 * 
 * @export
 * @interface ApiMasterGETResponse200ThisIsSuperNestedMasterData
 */
export interface ApiMasterGETResponse200ThisIsSuperNestedMasterData {
    /**
     * 
     * @type {Array<string>}
     * @memberof ApiMasterGETResponse200ThisIsSuperNestedMasterData
     */
    'gender': Array<string>;
}

/**
 * DefaultApi - axios parameter creator
 * @export
 */
export const DefaultApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * /api/job/{job}
         * @summary /api/job/{job}
         * @param {number} job 22
         * @param {string} [contentType] application/json
         * @param {string} [accept] application/json
         * @param {ApiJobJobPUTRequest} [apiJobJobPUTRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        apiJobJobPUT: async (job: number, contentType?: string, accept?: string, apiJobJobPUTRequest?: ApiJobJobPUTRequest, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'job' is not null or undefined
            assertParamExists('apiJobJobPUT', 'job', job)
            const localVarPath = `/api/job/{job}`
                .replace(`{${"job"}}`, encodeURIComponent(String(job)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearerAuth required
            // http bearer authentication required
            await setBearerAuthToObject(localVarHeaderParameter, configuration)

            if (contentType !== undefined && contentType !== null) {
                localVarHeaderParameter['Content-Type'] = String(contentType);
            }

            if (accept !== undefined && accept !== null) {
                localVarHeaderParameter['Accept'] = String(accept);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(apiJobJobPUTRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * /api/master
         * @summary /api/master
         * @param {string} [contentType] application/json
         * @param {string} [accept] application/json
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        apiMasterGET: async (contentType?: string, accept?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/api/master`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (contentType !== undefined && contentType !== null) {
                localVarHeaderParameter['Content-Type'] = String(contentType);
            }

            if (accept !== undefined && accept !== null) {
                localVarHeaderParameter['Accept'] = String(accept);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * DefaultApi - functional programming interface
 * @export
 */
export const DefaultApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = DefaultApiAxiosParamCreator(configuration)
    return {
        /**
         * /api/job/{job}
         * @summary /api/job/{job}
         * @param {number} job 22
         * @param {string} [contentType] application/json
         * @param {string} [accept] application/json
         * @param {ApiJobJobPUTRequest} [apiJobJobPUTRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async apiJobJobPUT(job: number, contentType?: string, accept?: string, apiJobJobPUTRequest?: ApiJobJobPUTRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ApiJobJobPUTResponse200>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.apiJobJobPUT(job, contentType, accept, apiJobJobPUTRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * /api/master
         * @summary /api/master
         * @param {string} [contentType] application/json
         * @param {string} [accept] application/json
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async apiMasterGET(contentType?: string, accept?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ApiMasterGETResponse200>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.apiMasterGET(contentType, accept, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * DefaultApi - factory interface
 * @export
 */
export const DefaultApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = DefaultApiFp(configuration)
    return {
        /**
         * /api/job/{job}
         * @summary /api/job/{job}
         * @param {number} job 22
         * @param {string} [contentType] application/json
         * @param {string} [accept] application/json
         * @param {ApiJobJobPUTRequest} [apiJobJobPUTRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        apiJobJobPUT(job: number, contentType?: string, accept?: string, apiJobJobPUTRequest?: ApiJobJobPUTRequest, options?: any): AxiosPromise<ApiJobJobPUTResponse200> {
            return localVarFp.apiJobJobPUT(job, contentType, accept, apiJobJobPUTRequest, options).then((request) => request(axios, basePath));
        },
        /**
         * /api/master
         * @summary /api/master
         * @param {string} [contentType] application/json
         * @param {string} [accept] application/json
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        apiMasterGET(contentType?: string, accept?: string, options?: any): AxiosPromise<ApiMasterGETResponse200> {
            return localVarFp.apiMasterGET(contentType, accept, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for apiJobJobPUT operation in DefaultApi.
 * @export
 * @interface DefaultApiApiJobJobPUTRequest
 */
export interface DefaultApiApiJobJobPUTRequest {
    /**
     * 22
     * @type {number}
     * @memberof DefaultApiApiJobJobPUT
     */
    readonly job: number

    /**
     * application/json
     * @type {string}
     * @memberof DefaultApiApiJobJobPUT
     */
    readonly contentType?: string

    /**
     * application/json
     * @type {string}
     * @memberof DefaultApiApiJobJobPUT
     */
    readonly accept?: string

    /**
     * 
     * @type {ApiJobJobPUTRequest}
     * @memberof DefaultApiApiJobJobPUT
     */
    readonly apiJobJobPUTRequest?: ApiJobJobPUTRequest
}

/**
 * Request parameters for apiMasterGET operation in DefaultApi.
 * @export
 * @interface DefaultApiApiMasterGETRequest
 */
export interface DefaultApiApiMasterGETRequest {
    /**
     * application/json
     * @type {string}
     * @memberof DefaultApiApiMasterGET
     */
    readonly contentType?: string

    /**
     * application/json
     * @type {string}
     * @memberof DefaultApiApiMasterGET
     */
    readonly accept?: string
}

/**
 * DefaultApi - object-oriented interface
 * @export
 * @class DefaultApi
 * @extends {BaseAPI}
 */
export class DefaultApi extends BaseAPI {
    /**
     * /api/job/{job}
     * @summary /api/job/{job}
     * @param {DefaultApiApiJobJobPUTRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    public apiJobJobPUT(requestParameters: DefaultApiApiJobJobPUTRequest, options?: AxiosRequestConfig) {
        return DefaultApiFp(this.configuration).apiJobJobPUT(requestParameters.job, requestParameters.contentType, requestParameters.accept, requestParameters.apiJobJobPUTRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * /api/master
     * @summary /api/master
     * @param {DefaultApiApiMasterGETRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    public apiMasterGET(requestParameters: DefaultApiApiMasterGETRequest = {}, options?: AxiosRequestConfig) {
        return DefaultApiFp(this.configuration).apiMasterGET(requestParameters.contentType, requestParameters.accept, options).then((request) => request(this.axios, this.basePath));
    }
}


